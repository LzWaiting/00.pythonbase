函数的文档字符串(进行自定义函数说明/注释)
	定义：
		函数内部，第一个没有赋值给任何变量的字符串为文档字符串
	语法：
		def 函数名(形参列表):
			'''函数的文档字符串'''
			函数语句块
	示例：
		def cba(name,age):
			'这是一块文档字符串...'
			pass
		>>>help(cba)

函数的__doc__属性
	__doc__属性用于绑定该函数的文档字符串

	示例:
		def fx(a,b):
			'''这是函数的文档字符串
			这是第二行...
			'''

		print(fx.__doc__)

函数的__name__属性：
	__name__属性用于绑定函数名的字符串

	示例：
		def fx():
			pass
		f1 = fx
		print(f1.__name__)		# fx

函数定义语句
	def 语句的语法
		[@装饰器名1]
		[@装饰器名2]
		...
		def 函数名([位置形参],[*[元组形参名]],[命名关键字形参],[**[字典形参]]):
			'''文档字符串'''
			语句块
		注：[]里的内容代表可省略

☆☆☆面试题：
	L = [1,2,3]
	
	def f(n,lst=[]):
		lst.append(n)
		print(lst)

	f(4,L)	#请问结果是什么？ 		# [1,2,3,4]
	f(5,L)	#请问结果是什么？ 		# [1,2,3,4,5]
	f(100)	#请问打印结果是什么？	# [100]
	f(200)	#请问打印结果是什么？	# [100,200]

	说明：
		默认参数（缺省参数）绑定在函数对象内部，随函数的生命一直存在

	解决办法：
	L = [1,2,3]
	
	def f(n,lst=None):
		if lst is None:
			lst = []
		lst.append(n)
		print(lst)

	f(4,L)	#请问结果是什么？ 		# [1,2,3,4]
	f(5,L)	#请问结果是什么？ 		# [1,2,3,4,5]
	f(100)	#请问打印结果是什么？	# [100]
	f(200)	#请问打印结果是什么？	# [200]		解决缺省参数解绑
