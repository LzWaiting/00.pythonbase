深拷贝 deep copy 和 浅拷贝 shallow copy
	浅拷贝:
		是指在复制过程中只复制一层变量,不会复制深层变量绑定的对象的复制过程
	示例:
		L = [3.1,3.2]
		L1 = [1,2,L]		
		L2 = L1.copy()				# 等同于L2 = L1[:]  	浅拷贝
		print(L1)					# L1 = [1,2,[3.1,3.2]] 
		print(L2)					# L2 = [1,2,[3.1,3.2]]
		L2[2][0] = 3.14				# 赋值 L 列表第一个元素的值为3.14, 等同于L[0] = 3.14
		print(L1)					# L1 = [1,2,[3.14,3.2]]
		print(L2)					# L2 = [1,2,[3.14,3.2]]
	深拷贝:
		复制一个数据对象,它会连同这个数据对象所有可变对象复制一遍,可真正地实现数据的独立;
		深拷贝通常只对可变对象进行复制,不可变对象通常不变
	示例:
		import copy					# 导入 copy 模块
		L = [3.1,3.2]
		L1 = [1,2,L]		
		L2 = copy.deepcopy(L1)		# 深拷贝
		print(L1)					# L1 = [1,2,[3.1,3.2]] 
		print(L2)					# L2 = [1,2,[3.1,3.2]]
		L2[2][0] = 3.14				# 只改变L2中的元素,不改变L列表中的元素
		print(L1)					# L1 = [1,2,[3.1,3.2]]
		print(L2)					# L2 = [1,2,[3.14,3.2]]