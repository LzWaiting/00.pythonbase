字符串 str:
	作用:
		用来记录文本(文字)信息
	字符串的表达方法
		在非注释中,凡是用引号括起来的部分都是字符串
		'	单引号
		"	双引号
		'''	三单引号
		"""	三双引号
	空字符串的字面值表示方式
		''
		""
		''''''
		""""""
	非空字符串的字面值表示方式
		'hello'
		"hello"
		'''hello'''
		"""hello"""
	单引号和双引号的区别:
		单引号内的双引号不算结束符
		双引号内的单引号不算结束符
	三引号字符串
		作用:
			三引号字符串的 换行 会自动转换为 换行符'\n'
			三引号内可以包含 单引号 和 双引号
		如何表示:
			'welcome to beijing.\nI like python!\nI am studing!'
			'''welcome to beijing.I like python!I am studing!'''
	用转义序列代表特殊字符
		字符串字面值中,用字符反斜杠(\)
		后跟一些字符代表一个字符

		字符串中的转义字符表
			\'		单引号
			\"		双引号
			\\		反斜杠
			\n 		换行
			\r		返回光标至行首
			\f		换页
			\t 		水平制表符
			\v		垂直制表符
			\b 		倒退
			\0		空字符,字符值为0
			\0oo	oo为两位八进制表示的字符
			\xXX	XX为两位十六进制表示的字符
			\uXXXX	Unicode16的十六进制表示的字符
			\uXXXXXXXX	Unicode32的十六进制表示的字符

raw 字符串(原始字符串)
	字面值格式:
		r'字符串内容'
		r"字符串内容"
		r'''字符串内容'''
		r"""字符串内容"""
	作用:
		让转义字符\无效
	示例:
		a = 'C:\newfile\test.py'
		print(a)
		print(len(a))		#得到字符串的长度
		a = r'C:\newfile\test.py'
		print(a)
		print(len(a))

字符串的运算:
	算术运算符:
		+ += * *=
	+ 加号运算符用于字符串的拼接
	例:
		x = 'abcd' + 'efg'	# 字符串的+运算,只能加字符串
		print(x)	# abcdefg
		x += '123'
		print(x)	# abcdefg123
	*运算符用于生成重复的字符串
	例:
		x = '123'
		y = x * 2	# y = '123123'	# 字符串*运算,只能乘整数
		x *= 3		# x = '123123123'

		x = 3
		x *= '123'	# x = '123123123'	#满足交换律

字符串的比较运算
	运算符:
		> >= < <= == !=		# 从前到后逐一比较
	示例:
		'A' < 'B'		# True
		'ABC' > 'AB'	# True
		'ABC' == 'abc'	# False
		'AD' < 'ABC'	# False

字符串的索引(index)操作
	python 字符串 str 是不可以改变的字符序列

	索引 index
		索引语法:
			字符串[整数表达式]
		说明:
			python 序列都可以用索引(index)来访问序列中的对象(元素)
			python 序列的正向索引是从0开始的,第二个索引为1,最后一个索引为len(s) - 1
			pyhton 序列的反向索引是从-1开始的,-1代表最后一个,-2代表倒数第二个,第一个是-len(s)
		示例:
			s = 'ABCDE'
			print(s[0])		# A
			print(s[4])		# E

切片 slice
	作用:
		从字符串序列中取出一部分相应的元素,重新组成一个字符串
	语法:
		字符串[(开始索引b):(结束索引e)(:(步长s))]
		注: 1.()内括起的部分代表可以省略
		    2.开始索引/结束索引可以越界
	说明:
		1.开始索引是切片开始切下的位置0代表第一个元素,-1代表最后一个元素
		2.结束索引是切片的终止索引(但不包含终止索引)
		3.步长是切片每次获取完当前索引后移动的方向和偏移量
			1)没有步长,相当于取值完成后向后移动一个索引的位置(默认为1)
			2)当步长为正整数时,取正向切片:
			  步长默认值为1,开始索引默认值为0,结束索引的默认值为len(s)
			3)当步长为负整数时,取反向切片:
			  反向切片时,默认的起始位置为最后一个元素,默认终止位置为第一个位置的前一个位置
	示例:
		s = 'ABCDE'
		a = s[1:4]		# a --> 'BCD'
		a = s[1:]		# a --> 'BCDE'
		a = s[:2]		# a --> 'AB'
		a = s[:]		# a --> 'ABCDE'
		a = s[::2]		# a --> 'ACE'
		a = s[::-1]		# a --> 'EDCBA'
		a = s[4:0:-2]	# a --> 'EC'

python3 中常用的序列函数
	len(seq)	返回序列的长度
	max(x)		返回序列的最大值元素
	min(x)		返回序列的最小值元素
	示例:
		s = 'ABCDE'
		print(len(s)) 	# 5
		print(max(s)) 	# E
		print(min(s)) 	# A

字符串编码转换函数
	ord(c) 	返回一个字符串的Unicode编码值
	chr(i)	返回i这个值所对应的字符
	示例:
		print(ord('A'))		# 65
		print(chr(65))		# 'A'

整数转换为字符串函数
	hex(i)	将整数转换为十六进制字符串
	oct(i)	将整数转换为八进制字符串
	bin(i)	将整数转化为二进制字符串

字符串的构造(创建)函数 str
	str(obj='')		将对象转换为字符串

常用的字符串方法(method):
	字符串方法的调用语法
		对象.方法名(方法传参)
		注:
			方法的调用属于表达式,通常可以返回一个值或None
	示例:
		'abc'.isalpha()		# True
		123.isalpha() 		# False
	空白字符:
		是指空格,水平制表符(\t),换行符(\n)等不可见的字符

	S.isdigit()							# 判断字符串中的字符是否全为数字
	S.isalpha()							# 判断字符串中的字符是否全为英文字母
	S.islower()							# 判断字符串所有字符是否全为小写英文字母
	S.isupper()							# 判断字符串所有字符是否全为大写英文字母
	S.isspace()							# 判断字符串所有字符是否全为空白字符
	S.center(width[,fill])				# 将原字符串居中,左右默认填充空格
	S.count(sub[,start[,end]])			# 获取一个字符串中子串的个数
	S.find(sub[,start[,end]])			# 获取字符串中子串sub的索引,失败返回-1
	S.strip()							# 返回去掉左右空白字符的字符串
	S.lstrip()							# 返回去掉左侧空白字符的字符串
	S.rstirp()							# 返回去掉右侧空白字符的字符串
	S.upper()							# 生成将英文转换为大写的字符串
	S.lower()							# 生成将英文转换为小写的字符串
	S.replace(old,new[,count])			# 将原字符串的old用new代替,生成一个新的字符串,count替换次数
	S.startswith(prefix[,start[,end]])	# 返回S是否是以prefix开头,如果以prefix开头返回True,否则False
	S.endswith(suffix[,start[,end]])	# 返回S是否是以suffix结尾,如果以suffix结尾返回True,否则False
	S.title()							# 生成每个英文单词的首字母大写字符串
	S.isnumeric()						# 判断字符串是否全为数字字符
	S.swapcase() 						# 将字符串大小写字母转换为小大写
	S.capitalize() 						# 首字母大写，其余小写

字符串格式化表达式
	运算符
		%
	作用:
		生成一定格式的字符串
	语法:
		格式字符串 % 参数值
		格式字符串 % (参数值1,参数值2,...)
		格式字符串中的 % 为占位符,占位符的位置将用参数值替换
	示例:
		fmt = "姓名:_%s_\n年龄:_%d_"
		name = input('请输入姓名:')
		age = int(input("请输入年龄:"))
		s = fmt % (name,age)
		print (s)
		# 姓名:_name_\n年龄:_age_
格式化字符串中的占位符和类型码
	占位符 		意义
	%s 			字符串,使用str函数转换
	%r 			字符串,使用repr函数转换
	%c 			整数转为单个字符
	%d 			十进制整数
	%o 			八进制整数
	%x 			十六进制整数(a-f小写)
	%X 			十六进制整数(A-F大写)
	%e 			指数形浮点数(e小写)	如: 2.9e+10
	%E 			指数形浮点数(E大写)	如: 2.9E+10
	%f,%F 		浮点十进制形式
	%g,%G 		十进制形式浮点数或指数或指数浮点数自动转换
	%% 			等同于一个%字符

占位符和类型码之间的格式语法
	%[格式语法]类型码
		格式语法:
			- 左对齐
			+ 显示正号
			0 补零
			宽度(整数)
			宽度.精度(整数)
		示例:
			'%10d' % 123			# '       123'
			'%-10d' % 123			# '123       '
			'%10s' % 'abc' 			# '       abc'
			'%-5s' % 'abc' 			# 'abc  '
			'%05s' % 123 			# '00123'
			'%7.3f' % 3.1415926 	# '  3.141'