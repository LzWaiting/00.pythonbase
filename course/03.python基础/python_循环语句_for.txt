	for 语句:
		作用:
			用来遍历可迭代对象的数据元素

		可迭代对象是指能依次获取数据元素的对象
		可迭代对象包括:
			字符串 str
			列表 list
			元组 tuple
			字典 dict
			集合 set
			...
	for 语句语法:
		for 变量列表 in 可迭代对象:
			语句块1
		else:
			语句块2
	for 语句语法说明:
		1.可迭代对象每次提供一个元素依次赋值给变量列表中的变量,赋值完毕后执行语句块1,重复执行此步骤,直到可迭代对象不能提供数据为止
		2.可迭代对象提供完所有元素后,执行else子句部分的语句块2,然后退出此for语句
		3.else子句部分可以省略(同while语句类似)
		4.当在循环内部用break终止循环时,else子句部分语句不会执行

break 语句
	作用:
		循环语句(while,for语句)中,用于终止当前循环语句的执行
	说明:
		1.当break语句执行后,此循环语句break之后的语句将不再执行
		2.break语句通常和if语句组合使用
		3.break语句终止循环时,循环语句的else子句的语句将不会执行
		4.break语句只能终止当前循环语句的执行,如果有循环嵌套时,不会跳出嵌套的外重循环
		5.break语句只能在循环语句(while或for语句)内部使用
			
range 函数:
	格式见:
		>>> help(range)
	函数:
		range (stop)	从零开始,每次生成一个整数后加1操作,直到stop为止(不包含stop)
		range (start,stop[,step]) 从start开始,每次生成一个整数后移动step,直到stop为止(不包含stop,且step可以是负整数)
	作用:
		用来创建一个生成一系列整数的可迭代对象(也叫整数序列生成器)
	说明:
		range 返回的对象是可迭代对象,可以用于for语句中

for 语句嵌套:
	for语句内部可以嵌套任意语句,包含for语句和while语句

continue 语句:
	作用:
		用于循环语句(while,for 语句)中,不再执行本次循环内continue之后的语句,重新开始一次新的循环
	说明:
		1.在while语句中,执行continue语句将会直接跳转到while语句的真值表达式处重新判断循环条件
		2.在for语句中,执行continue语句,将会从可迭代对象中取下一个元素,绑定变量后再此进行循环
	示例:
		for x in range(5):
			if x == 2:
				continue
			print(x)