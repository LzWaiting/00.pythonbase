import 语句 搜索模块的路径顺序
	1. 搜索程序运行时的路径（当前路径）
	2. sys.path 提供的路径
	3. 搜索内置模块

sys.path 是一个存储模块搜索路径的列表
	1. 可以把自定义的模块放在相应的路径下可以导入
	2. 可以把自己模块的路径添加在sys.path列表中

模块的加载过程：
	1. 在模块导入时，模块的所有语句会执行
	2. 如果一个模块已经导入，则再次导入时不会重新执行模块内的语句
	示例：
		# mymod3.py	
			def myfun3():
				print('mymod3()被调用')

			print('mymod3,被加载')		# 导入，只加载一次

		>>>import mymod3
		>>>mymod3,被加载
		>>>import mymod3
		>>>

模块的重新加载（或直接重新运行程序）：
	加载后，再次在模块中添加变量，此时无法加载，需使用imp.reload重新加载
		示例：
			import mymod3
			import imp 				# imp 模块总管
			imp.reload(mymod3)		# 重新加载 mymod3 模块

模块被导入和执行的过程：
	1. 先搜索相关的路径找模块（.py）
	2. 判断是否有此模块对应的.pyc文件，如果存在pyc文件且比.py文件新，则直接加载.pyc文件
	3. 否则用.py文件生成.pyc文件后再进行加载

	注：
		pyc 模块的编译文件（compile编译）
				   编译	（机器码）	解释执行
		mymod1.py ----> mymod1.pyc --------> python3
