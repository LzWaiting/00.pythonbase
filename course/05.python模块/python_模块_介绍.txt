问题：
	多人写一个程序时该怎么做？

	模块 Module
		定义：
			模块是一个包含有一系列数据，函数，类等组成的程序组
			模块是一个文件，模块文件名通常以.py结尾
		作用：
			1. 让一些相关的数据，函数，类等有逻辑的组织在一起，使逻辑结构更加清晰
			2. 模块中的数据，函数和类等可提供给其他模块或程序使用

		模块的分类：
			1. 内置模块(builtins)，在解析器的内部可以直接使用
			2. 标准库模块，安装python时已安装且可直接使用
			3. 第三方模块（通常为开源），需要自己安装
			4. 用户自己完的模块（可以作为其他人的第三方模块）

	模块的导入语句：

		import 语句：
			语法：
				模块名1[as 模块新名1][,模块名2[as模块新名2]],...
			示例：
				导入数学模块
				import math
				导入系统模块sys和os模块
				import sys,os
			作用：
				将某模块整体导入到当前模块
			用法：
				模块.属性

			dir(obj)	# 函数返回模块所有属性的字符串列表
			help(obj)	# 可以查看模块相关的文档字符串

			练习：
				import math as m 		# 此处可以使用from math import pi,pow,sqrt,此时可以直接使用
				L = float(input('输入一个正方形的周长：'))
				S1 = m.pow(L/4,2)
				print('面积1',S1)
				R = float(input('输入一个圆的半径：'))
				S2 = m.pi * m.pow(R,2)
				print('面积2',S2)
				S = float(input('输入一个正方形的面积：'))
				L3 = m.sqrt(S)*4
				print('周长',L3)

		from import 语句
			语法：
				from 模块名 import 模块属性名1 [as 属性新名1][,模块属性名2[as 属性新名2],...]
			作用：
				将某模块内的一个或多个属性导入到当前模块的作用域

			示例：
				from math import pi
				from math import pow,sqrt
				from math import factorial as fac
				...

		from import * 语句
			语法：
				from 模块名 import *
			作用：
				将某模块的所有属性都导入当前模块
			示例：
				from math import *

		dir 函数：
			dir ([对象])		返回一个字符串列表
			作用：
				1. 如果没有参数调用，则返回当前作用域内的所有变量的列表
				2. 如果给定一个对象作为参数，则返回这个对象的所有变量的列表
					2.1 对于一个模块，返回这个模块的全部属性
					2.2 对于一个类对象，返回类对象的所有变量，亲递归基类对象的所有变量
					2.3 对于其他对象，返回所有的变量，类变量，基类变量
